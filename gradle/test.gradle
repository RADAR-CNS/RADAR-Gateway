sourceSets {
    integrationTest {
        kotlin {
            compileClasspath += main.output
            runtimeClasspath += main.output
            srcDir 'src/integrationTest/kotlin'
        }
    }
}

configurations {
    integrationTestCompile.extendsFrom testCompile
    integrationTestRuntime.extendsFrom testRuntime
    integrationTestRuntimeOnly.extendsFrom testRuntimeOnly
}

repositories {
    maven { url 'http://packages.confluent.io/maven/' }
}

dependencies {
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: junitVersion
    testCompile group: 'org.mockito', name: 'mockito-core', version: mockitoVersion
    testCompile group: 'com.squareup.okhttp3', name: 'mockwebserver', version: okhttp3Version
    testRuntimeOnly group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: junitVersion

    testImplementation group: 'org.radarcns', name: 'radar-schemas-commons', version: radarSchemasVersion

    integrationTestImplementation group: 'org.radarcns', name: 'radar-schemas-commons', version: radarSchemasVersion
    integrationTestImplementation group: 'org.radarbase', name: 'radar-commons-testing', version: radarCommonsVersion
    integrationTestImplementation group: 'org.radarcns', name: 'oauth-client-util', version: radarMpVersion
}

compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

compileIntegrationTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

task integrationTest(type: Test) {
    description = "Run integration tests (located in src/integrationTest/...)."
    testClassesDirs = sourceSets.integrationTest.output.classesDirs
    classpath = sourceSets.integrationTest.runtimeClasspath

    outputs.upToDateWhen { false }
    testLogging.events "skipped", "failed", "passed"
}

//---------------------------------------------------------------------------//
// Testing                                                                   //
//---------------------------------------------------------------------------//

tasks.matching { it instanceof Test }.all {
    useJUnitPlatform ()

    testLogging {
        showStandardStreams = true
        showExceptions = true
        showCauses = true
        showStackTraces = true
        exceptionFormat "full"
    }
}
